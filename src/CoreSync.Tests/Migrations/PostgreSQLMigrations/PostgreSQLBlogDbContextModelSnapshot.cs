// <auto-generated />
using System;
using CoreSync.Tests.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoreSync.Tests.Migrations.PostgreSQLMigrations
{
    [DbContext(typeof(PostgreSQLBlogDbContext))]
    partial class PostgreSQLBlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoreSync.Tests.Data.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorEmail")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReplyToId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorEmail");

                    b.HasIndex("PostId");

                    b.HasIndex("ReplyToId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("CoreSync.Tests.Data.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorEmail")
                        .HasColumnType("text");

                    b.Property<int>("Claps")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<float>("Stars")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AuthorEmail");

                    b.ToTable("Posts", (string)null);
                });

            modelBuilder.Entity("CoreSync.Tests.Data.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp")
                        .HasColumnName("Date Created(date/$time)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CoreSync.Tests.Data.Comment", b =>
                {
                    b.HasOne("CoreSync.Tests.Data.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorEmail");

                    b.HasOne("CoreSync.Tests.Data.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("CoreSync.Tests.Data.Comment", "ReplyTo")
                        .WithMany()
                        .HasForeignKey("ReplyToId");

                    b.Navigation("Author");

                    b.Navigation("Post");

                    b.Navigation("ReplyTo");
                });

            modelBuilder.Entity("CoreSync.Tests.Data.Post", b =>
                {
                    b.HasOne("CoreSync.Tests.Data.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorEmail");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("CoreSync.Tests.Data.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("CoreSync.Tests.Data.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
